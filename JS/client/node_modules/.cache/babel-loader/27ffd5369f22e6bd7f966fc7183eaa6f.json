{"ast":null,"code":"import _objectSpread from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/src/upload/Upload.js\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"../dropzone/Dropzone\";\nimport \"./Upload.css\";\nimport Progress from \"../progress/Progress\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.state = {\n      files: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n    _this.onFilesAdded = _this.onFilesAdded.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.uploadFiles = _this.uploadFiles.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendRequest = _this.sendRequest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderActions = _this.renderActions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"onFilesAdded\",\n    value: function onFilesAdded(files) {\n      this.setState(function (prevState) {\n        return {\n          files: prevState.files.concat(files)\n        };\n      });\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function () {\n      var _uploadFiles = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var promises;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.state.key || !this.state.keytype)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                alert('Whoops! Make sure to select a key!');\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.setState({\n                  uploadProgress: {},\n                  uploading: true\n                });\n                promises = [];\n                this.state.files.forEach(function (file) {\n                  promises.push(_this2.sendRequest(file));\n                });\n                _context.prev = 6;\n                _context.next = 9;\n                return Promise.all(promises);\n\n              case 9:\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n                window.setTimeout(function () {\n                  _this2.props.closeUpload();\n                }, 2000);\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                // Not Production ready! Do some error handling here instead...\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13]]);\n      }));\n\n      function uploadFiles() {\n        return _uploadFiles.apply(this, arguments);\n      }\n\n      return uploadFiles;\n    }()\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(file) {\n      var _this3 = this;\n\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(resolve, reject) {\n          var req, formData, filename;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  req = new XMLHttpRequest();\n                  req.upload.addEventListener(\"progress\", function (event) {\n                    if (event.lengthComputable) {\n                      var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n                      copy[file.name] = {\n                        state: \"pending\",\n                        percentage: event.loaded / event.total * 100\n                      };\n\n                      _this3.setState({\n                        uploadProgress: copy\n                      });\n                    }\n                  });\n                  req.upload.addEventListener(\"load\", function (event) {\n                    var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n                    copy[file.name] = {\n                      state: \"done\",\n                      percentage: 100\n                    };\n\n                    _this3.setState({\n                      uploadProgress: copy\n                    });\n\n                    resolve(req.response);\n                  });\n                  req.upload.addEventListener(\"error\", function (event) {\n                    var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n                    copy[file.name] = {\n                      state: \"error\",\n                      percentage: 0\n                    };\n\n                    _this3.setState({\n                      uploadProgress: copy\n                    });\n\n                    reject(req.response);\n                  });\n                  formData = new FormData();\n                  filename = _this3.state.key + _this3.state.keytype;\n                  formData.append(\"file\", file, filename);\n                  req.open(\"POST\", \"http://localhost:8000/upload\");\n                  req.send(formData);\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"renderProgress\",\n    value: function renderProgress(file) {\n      var uploadProgress = this.state.uploadProgress[file.name];\n\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return React.createElement(\"div\", {\n          className: \"ProgressWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Progress, {\n          progress: uploadProgress ? uploadProgress.percentage : 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          className: \"CheckIcon\",\n          alt: \"done\",\n          src: \"baseline-check_circle_outline-24px.svg\",\n          style: {\n            opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this4 = this;\n\n      if (this.state.successfullUploaded) {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this4.setState({\n              files: [],\n              successfullUploaded: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Clear\");\n      } else {\n        return React.createElement(\"button\", {\n          disabled: this.state.files.length < 0 || this.state.uploading,\n          onClick: this.uploadFiles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Upload\");\n      }\n    }\n  }, {\n    key: \"selectKey\",\n    value: function () {\n      var _selectKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(key) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.setState({\n                  key: key\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function selectKey(_x3) {\n        return _selectKey.apply(this, arguments);\n      }\n\n      return selectKey;\n    }()\n  }, {\n    key: \"keyStyle\",\n    value: function keyStyle(key) {\n      if (key.length === 1) {\n        return this.state.key === key ? 'whiteKey selectedKey' : 'whiteKey';\n      }\n\n      return this.state.key === key ? 'blackKey selectedKey' : 'blackKey';\n    }\n  }, {\n    key: \"renderPiano\",\n    value: function renderPiano() {\n      var _this5 = this;\n\n      if (this.state.files.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Choose the key signature...\\xA0\", React.createElement(\"b\", {\n          style: {\n            color: '#B80F42',\n            fontSize: '1.2em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, this.state.key, \" \", this.state.keytype)), React.createElement(\"div\", {\n          className: \"pianoContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: this.keyStyle('C'),\n          onClick: function onClick() {\n            return _this5.selectKey('C');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('D'),\n          onClick: function onClick() {\n            return _this5.selectKey('D');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('E'),\n          onClick: function onClick() {\n            return _this5.selectKey('E');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('F'),\n          onClick: function onClick() {\n            return _this5.selectKey('F');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('G'),\n          onClick: function onClick() {\n            return _this5.selectKey('G');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('A'),\n          onClick: function onClick() {\n            return _this5.selectKey('A');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('B'),\n          onClick: function onClick() {\n            return _this5.selectKey('B');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('Db'),\n          id: \"Db\",\n          onClick: function onClick() {\n            return _this5.selectKey('Db');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('Eb'),\n          id: \"Eb\",\n          onClick: function onClick() {\n            return _this5.selectKey('Eb');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('Gb'),\n          id: \"Gb\",\n          onClick: function onClick() {\n            return _this5.selectKey('Gb');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('Ab'),\n          id: \"Ab\",\n          onClick: function onClick() {\n            return _this5.selectKey('Ab');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: this.keyStyle('Bb'),\n          id: \"Bb\",\n          onClick: function onClick() {\n            return _this5.selectKey('Bb');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })));\n      }\n    }\n  }, {\n    key: \"selectKeyButtons\",\n    value: function selectKeyButtons(type) {\n      if (type === this.state.keytype) {\n        return 'keySelect keySelected';\n      }\n\n      return 'keySelect keyUnselected';\n    }\n  }, {\n    key: \"renderKeySelect\",\n    value: function renderKeySelect() {\n      var _this6 = this;\n\n      if (this.state.key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: this.selectKeyButtons('major'),\n          onClick: function onClick() {\n            return _this6.setState({\n              keytype: 'major'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Major\"), React.createElement(\"button\", {\n          className: this.selectKeyButtons('minor'),\n          onClick: function onClick() {\n            return _this6.setState({\n              keytype: 'minor'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"Minor\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"closeButton\",\n        onClick: function onClick() {\n          return _this7.props.closeUpload(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"span\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Upload Files\"), React.createElement(\"div\", {\n        className: \"Content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onFilesAdded: this.onFilesAdded,\n        disabled: this.state.uploading || this.state.successfullUploaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"div\", {\n          key: file.name,\n          className: \"Row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Filename\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, file.name), _this7.renderProgress(file));\n      }), this.renderPiano(), this.renderKeySelect())), React.createElement(\"div\", {\n        className: \"Actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.renderActions()));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":{"version":3,"sources":["/Users/ryanmchenry/Documents/Northwestern/win2019/352/harmoni/client/src/upload/Upload.js"],"names":["React","Component","Dropzone","Progress","Upload","props","state","files","uploading","uploadProgress","successfullUploaded","onFilesAdded","bind","uploadFiles","sendRequest","renderActions","setState","prevState","concat","key","keytype","alert","promises","forEach","file","push","Promise","all","window","setTimeout","closeUpload","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","copy","name","percentage","loaded","total","response","formData","FormData","filename","append","open","send","opacity","length","color","fontSize","keyStyle","selectKey","type","selectKeyButtons","map","renderProgress","renderPiano","renderKeySelect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from \"../dropzone/Dropzone\";\r\nimport \"./Upload.css\";\r\nimport Progress from \"../progress/Progress\";\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: [],\r\n      uploading: false,\r\n      uploadProgress: {},\r\n      successfullUploaded: false\r\n    };\r\n\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.sendRequest = this.sendRequest.bind(this);\r\n    this.renderActions = this.renderActions.bind(this);\r\n  }\r\n\r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n  }\r\n\r\n  async uploadFiles() {\r\n    if (!this.state.key || !this.state.keytype){\r\n      alert('Whoops! Make sure to select a key!')\r\n      return\r\n    }\r\n    this.setState({ uploadProgress: {}, uploading: true });\r\n    const promises = [];\r\n    this.state.files.forEach(file => {\r\n      promises.push(this.sendRequest(file));\r\n    });\r\n    try {\r\n      await Promise.all(promises);\r\n\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n      window.setTimeout(()=>{this.props.closeUpload()},2000)\r\n    } catch (e) {\r\n      // Not Production ready! Do some error handling here instead...\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n    }\r\n  }\r\n\r\n  sendRequest(file) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const req = new XMLHttpRequest();\r\n\r\n      req.upload.addEventListener(\"progress\", event => {\r\n        if (event.lengthComputable) {\r\n          const copy = { ...this.state.uploadProgress };\r\n          copy[file.name] = {\r\n            state: \"pending\",\r\n            percentage: (event.loaded / event.total) * 100\r\n          };\r\n          this.setState({ uploadProgress: copy });\r\n        }\r\n      });\r\n\r\n      req.upload.addEventListener(\"load\", event => {\r\n        const copy = { ...this.state.uploadProgress };\r\n        copy[file.name] = { state: \"done\", percentage: 100 };\r\n        this.setState({ uploadProgress: copy });\r\n        resolve(req.response);\r\n      });\r\n\r\n      req.upload.addEventListener(\"error\", event => {\r\n        const copy = { ...this.state.uploadProgress };\r\n        copy[file.name] = { state: \"error\", percentage: 0 };\r\n        this.setState({ uploadProgress: copy });\r\n        reject(req.response);\r\n      });\r\n\r\n      const formData = new FormData();\r\n      let filename = this.state.key + this.state.keytype\r\n      formData.append(\"file\", file, filename);\r\n\r\n      req.open(\"POST\", \"http://localhost:8000/upload\");\r\n      req.send(formData);\r\n\r\n    });\r\n  }\r\n\r\n  renderProgress(file) {\r\n    const uploadProgress = this.state.uploadProgress[file.name];\r\n    if (this.state.uploading || this.state.successfullUploaded) {\r\n      return (\r\n        <div className=\"ProgressWrapper\">\r\n          <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\r\n          <img\r\n            className=\"CheckIcon\"\r\n            alt=\"done\"\r\n            src=\"baseline-check_circle_outline-24px.svg\"\r\n            style={{\r\n              opacity:\r\n                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderActions() {\r\n    if (this.state.successfullUploaded) {\r\n      return (\r\n        <button\r\n          onClick={() =>\r\n            this.setState({ files: [], successfullUploaded: false })\r\n          }\r\n        >\r\n          Clear\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          disabled={this.state.files.length < 0 || this.state.uploading}\r\n          onClick={this.uploadFiles}\r\n        >\r\n          Upload\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  async selectKey(key){\r\n    await this.setState({key:key})\r\n  }\r\n\r\n  keyStyle(key){\r\n    if (key.length === 1){\r\n      return this.state.key === key ? 'whiteKey selectedKey' : 'whiteKey'\r\n    }\r\n    return this.state.key === key ? 'blackKey selectedKey' : 'blackKey'\r\n  }\r\n\r\n  renderPiano(){\r\n    if (this.state.files.length > 0){\r\n      return(\r\n        <div>\r\n          <div>Choose the key signature...&nbsp;<b style={{color: '#B80F42', fontSize:'1.2em'}}>{this.state.key} {this.state.keytype}</b></div>\r\n          <div className='pianoContainer'>\r\n            <div className={this.keyStyle('C')} onClick={()=>this.selectKey('C')}></div>\r\n            <div className={this.keyStyle('D')} onClick={()=>this.selectKey('D')}></div>\r\n            <div className={this.keyStyle('E')} onClick={()=>this.selectKey('E')}></div>\r\n            <div className={this.keyStyle('F')} onClick={()=>this.selectKey('F')}></div>\r\n            <div className={this.keyStyle('G')} onClick={()=>this.selectKey('G')}></div>\r\n            <div className={this.keyStyle('A')} onClick={()=>this.selectKey('A')}></div>\r\n            <div className={this.keyStyle('B')} onClick={()=>this.selectKey('B')}></div>\r\n\r\n            <div className={this.keyStyle('Db')} id='Db' onClick={()=>this.selectKey('Db')}></div>\r\n            <div className={this.keyStyle('Eb')} id='Eb' onClick={()=>this.selectKey('Eb')}></div>\r\n            <div className={this.keyStyle('Gb')} id='Gb' onClick={()=>this.selectKey('Gb')}></div>\r\n            <div className={this.keyStyle('Ab')} id='Ab' onClick={()=>this.selectKey('Ab')}></div>\r\n            <div className={this.keyStyle('Bb')} id='Bb' onClick={()=>this.selectKey('Bb')}></div>\r\n          </div>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  selectKeyButtons(type){\r\n    if (type === this.state.keytype){\r\n      return 'keySelect keySelected'\r\n    }\r\n    return 'keySelect keyUnselected'\r\n  }\r\n\r\n  renderKeySelect(){\r\n    if (this.state.key){\r\n      return(\r\n        <div>\r\n          <button className={this.selectKeyButtons('major')} onClick={()=>this.setState({keytype:'major'})}>Major</button>\r\n          <button className={this.selectKeyButtons('minor')} onClick={()=>this.setState({keytype:'minor'})}>Minor</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Upload\">\r\n        <div className='closeButton' onClick={()=>this.props.closeUpload(true)}>X</div>\r\n        <span className=\"Title\">Upload Files</span>\r\n        <div className=\"Content\">\r\n          <div>\r\n            <Dropzone\r\n              onFilesAdded={this.onFilesAdded}\r\n              disabled={this.state.uploading || this.state.successfullUploaded}\r\n            />\r\n          </div>\r\n          <div className=\"Files\">\r\n            {this.state.files.map(file => {\r\n              return (\r\n                <div key={file.name} className=\"Row\">\r\n                  <span className=\"Filename\">{file.name}</span>\r\n                  {this.renderProgress(file)}\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {this.renderPiano()}\r\n            {this.renderKeySelect()}\r\n          </div>\r\n        </div>\r\n        <div className=\"Actions\">{this.renderActions()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}